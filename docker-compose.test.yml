version: "3.4"
services:

  zookeeper:
    image: solsson/kafka@sha256:e03747d2f1971d7efd91f70d2522c4fa874853f931d02f05015ef0976fba849f
    entrypoint: ./bin/zookeeper-server-start.sh
    command:
    - ./config/zookeeper.properties

  kafka:
    image: solsson/kafka@sha256:e03747d2f1971d7efd91f70d2522c4fa874853f931d02f05015ef0976fba849f
    depends_on:
    - zookeeper
    entrypoint:
    - ./bin/kafka-server-start.sh
    - ./config/server.properties
    - --override
    -   zookeeper.connect=zookeeper:2181
    - --override
    -   auto.create.topics.enable=false
    - --override
    -   log.retention.hours=-1
    - --override
    -   log.dirs=/var/lib/kafka/data/topics
    - --override
    -   min.insync.replicas=1
    - --override
    -   offsets.retention.minutes=10080
    # For access from dev environment
    - --override
    -   listeners=OUTSIDE://:19092,PLAINTEXT://:9092
    - --override
    -   advertised.listeners=OUTSIDE://localhost:19092,PLAINTEXT://:9092
    - --override
    -   listener.security.protocol.map=PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT
    - --override
    -   inter.broker.listener.name=PLAINTEXT
    ports:
    - 19092:19092

  pixy:
    depends_on:
    - kafka
    build: ./pixy
    ports:
    - 19090:19090
    command:
    - -tcpAddr
    -  0.0.0.0:19090

  topic1-create:
    image: solsson/kafka-cli@sha256:9fa3306e9f5d18283d10e01f7c115d8321eedc682f262aff784bd0126e1f2221
    depends_on:
    - kafka
    entrypoint:
    - ./bin/kafka-topics.sh
    command:
    - --zookeeper
    -   zookeeper:2181
    - --topic
    -   topic1
    - --create
    - --if-not-exists
    - --partitions
    -   '1'
    - --replication-factor
    -   '1'

  sut:
    depends_on:
    - kafka
    - topic1-create
    #build: .
    build:
      context: .
      target: runtime-plainjava
    ports:
    - 19081:8080
    environment:
    - kafka_bootstrap=kafka:9092
    - kafka_group_id=cache1
    - kafka_offset_reset=latest
    - topic=topic1
    #- target=http://example-nodejs-client:8081/kafka-keyvalue/v1/updates,http://onupdate-logging:8080/,http://example-nodejs-client:8082/testpost
    - max_polls=10

  onupdate-logging:
    image: solsson/httpstatus-random:access-logging@sha256:5330b2e84457e65ae9552acb00b26e8b7b2a878bcafb3baabddc13c1f840cd90
    expose:
    - '8080'

  smoketest:
    depends_on:
    - onupdate-logging
    - pixy
    - sut
    image: solsson/curl@sha256:92ebf15ac57bea360484480336ed5d9fa16d38d773fd00f7e9fb2cae94baf25a
    labels:
    - com.yolean.build-contract
    entrypoint:
    - /bin/bash
    - -cex
    - |
      curl --ipv4 --retry 5 --retry-connrefused -H 'User-Agent: curl-based-kafka-keyvalue-smoketest' http://onupdate-logging:8080/
      curl --ipv4 --retry 5 --retry-connrefused http://pixy:19090 -I
      curl --ipv4 --retry 5 --retry-connrefused http://cache1:19081 -I
      curl --ipv4 --retry 5 --retry-connrefused http://cache1:19081/metrics -f | grep consumer_metrics | grep incoming_byte_total
      curl --ipv4 --retry 5 --retry-connrefused http://cache1:19081/metrics -f | grep ^kkv_
      curl --ipv4 --retry 5 --retry-connrefused http://cache1:19081/healthz -f
      curl --ipv4 --retry 5 --retry-connrefused http://cache1:19081/cache/v1/raw/smoketest1 -I
      curl --ipv4 --retry 5 --retry-connrefused http://pixy:19090/topics -f | grep topic1
      curl --ipv4 -d '{"x":1}' -H 'Content-Type: application/json' 'http://pixy:19090/topics/topic1/messages?key=smoketest1' -f
      curl --ipv4 -d '{"x":2}' -H 'Content-Type: application/json' 'http://pixy:19090/topics/topic1/messages?key=smoketest1&sync' -f
      curl --ipv4 -d '{"x":3}' -H 'Content-Type: application/json' 'http://pixy:19090/topics/topic1/messages?key=smoketest1&sync' -f
      curl --ipv4 --retry 5 --retry-connrefused http://cache1:19081/cache/v1/raw/smoketest1 -f | grep '{"x":3}'
